<link href="~/lib/selectize/css/selectize.min.css" rel="stylesheet" />
<link href="~/lib/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />

<style>

    .wrapper {
        display: inline-flex;
        background: #fff;
        align-items: center;
        justify-content: space-evenly;
        border-radius: 5px;
        padding-top: 15px;
    }

    .wrapper .option {
        background: #fff;
        display: flex;
        align-items: center;
        justify-content: space-evenly;
        margin-right: 20px;
        border-radius: 5px;
        cursor: pointer;
        padding: 0 12px;
        border: 2px solid lightgrey;
        transition: all 0.3s ease;
    }

    .wrapper .option .dot {
        height: 20px;
        width: 20px;
        background: #d9d9d9;
        border-radius: 50%;
        position: relative;
    }

    .wrapper .option .dot::before {
        position: absolute;
        content: "";
        top: 4px;
        left: 4px;
        width: 12px;
        height: 12px;
        background: #4cb9e7;
        border-radius: 50%;
        opacity: 0;
        transform: scale(1.5);
        transition: all 0.3s ease;
    }

    input[type="radio"] {
        display: none;
    }

    #newClient:checked ~ .newClient,
    #savedClient:checked ~ .savedClient{
        border-color: #4cb9e7;
        background: #4cb9e7;
    }

    #newClient:checked ~ .newClient .dot,
    #savedClient:checked ~ .savedClient .dot {
        background: #fff;
    }

    #newClient:checked ~ .newClient .dot::before,
    #savedClient:checked ~ .savedClient .dot::before {
        opacity: 1;
        transform: scale(1);
    }

    .wrapper .option span {
        font-size: 20px;
        color: #808080;
    }

    #newClient:checked ~ .newClient span,
    #savedClient:checked ~ .savedClient span{
        color: #fff;
    }

    .selectize-input.items.not-full.has-options::after {
        display: none;
    }

    .flex-wrap input {
        width: 20px;
        height: 20px;
    }

    .flex-wrap div {
        margin-right:20px;
        font-size:20px;
    }
</style>

<div class="hero-title">
    <h2>Add Request</h2>
</div>

<form class="mt-4 mb-4 mx-4">
    <div class="form-group">
        <div class="wrapper">
            <input type="radio" name="radioForClient" value="1" id="newClient">
            <input type="radio" name="radioForClient" value="0" id="savedClient" checked>
            <label for="newClient" class="option newClient">
                <span>New Client</span>
            </label>
            <label for="savedClient" class="option savedClient">
                <span>Saved Client</span>
            </label>
        </div>

        <div id="savedClientDiv">
            <br />
            <label>Select client</label>
            <select name="ClientId" id="select-client" placeholder="Select client">
                @await Component.InvokeAsync("GetClientsComponent")
            </select>
            <small class="text-warning">Warning: There may be some clients with same name. Phone number can be distinctive in this regard.</small>
        </div>

        <div id="newClientDiv">
            <div class="form-group">
                <br />
                <label>Client name surname</label>
                <input name="ClientNameSurname" type="text" class="form-control" placeholder="Name Surname">
            </div>
            <div class="form-group">
                <br />
                <label>Client email</label>
                <input name="ClientEmail" type="email" class="form-control" aria-describedby="emailHelp" placeholder="Email address">
            </div>
            <div class="form-group">
                <br />
                <label>Client phone number</label>
                <input name="ClientPhoneNumber" type="tel" class="form-control" placeholder="Phone number" pattern="[0-9]{3}[0-9]{3}[0-9]{2}[0-9]{2}">
            </div>
        </div>
    </div>
    <hr />
    <div class="d-grid">
        <div class="row w-100">
            <div class="col-4">
                <label>Property Title</label>
                <input name="RequestTitle" type="text" class="form-control" placeholder="Title">
            </div>
            <div class="col-4">
                <label>Property Type</label>
                <select name="PropertyTypeId" class="form-control" id="propertyTypeInput" data-property="[1,2,3,4,5]">
                    <option value=2>Land</option>
                    <option value=5>Farmland</option>
                    <option value=1>Shop</option>
                    <option value=4>Apartment</option>
                    <option value=3>Commercial unit</option>
                </select>
            </div>
            <div class="col-4" id="numberOfRooms" data-property="[1,4]">
                <label>Number of Rooms</label>
                <select id="selectNumberOfRooms" class="form-select selectpicker" multiple data-live-search="true" title="Select number of rooms" style="background-color: #ffffff;">
                    <option value="1+0">1+0 (Studio)</option>
                    <option value="1+1">1+1</option>
                    <option value="2+0">2+0</option>
                    <option value="2+1">2+1</option>
                    <option value="2+2">2+2</option>
                    <option value="2.5+1">2.5+1</option>
                    <option value="3+0">3+0</option>
                    <option value="3+1">3+1</option>
                    <option value="3.5+1">3.5+1</option>
                    <option value="3+2">3+2</option>
                    <option value="3+3">3+3</option>
                    <option value="4+0">4+0</option>
                    <option value="4+1">4+1</option>
                    <option value="4.5+1">4.5+1</option>
                    <option value="4+2">4+2</option>
                    <option value="4+3">4+3</option>
                    <option value="4+4">4+4</option>
                    <option value="5+1">5+1</option>
                    <option value="5.5+1">5.5+1</option>
                    <option value="5+2">5+2</option>
                    <option value="5+3">5+3</option>
                    <option value="5+4">5+4</option>
                    <option value="6+1">6+1</option>
                    <option value="6+2">6+2</option>
                    <option value="6+3">6+3</option>
                    <option value="6+4">6+4</option>
                    <option value="7+1">7+1</option>
                    <option value="7+2">7+2</option>
                    <option value="7+3">7+3</option>
                    <option value="8+1">8+1</option>
                    <option value="8+2">8+2</option>
                    <option value="8+3">8+3</option>
                    <option value="8+4">8+4</option>
                    <option value="9+1">9+1</option>
                    <option value="9+2">9+2</option>
                    <option value="9+3">9+3</option>
                    <option value="9+4">9+4</option>
                    <option value="9+5">9+5</option>
                    <option value="9+6">9+6</option>
                    <option value="9 or more">9 or more</option>
                </select>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-3">
                <label>City</label>
                <select name="City" class="form-control" id="selectCity" data-property="[1,2,3,4,5]">
                </select>
            </div>

            <div class="col-9" style="display: none;" id="select-district">
                <label>District</label>
                <select id="selectTown" data-property="[1,2,3,4,5]" class="form-select selectpicker" multiple data-live-search="true" title="Select districts" style="background-color: #ffffff">
                </select>
            </div>

        </div>
    </div>
    <hr />
    <div class="d-grid">
        <div class="row">
            @await Component.InvokeAsync("GetPropertyStatusesComponent", new { view = "Default" })
            <div class="col-4">
                <div>
                    <label>Minimum Price</label>
                    <div class="input-group">
                        <input name="MinPrice" type="number" class="form-control" id="minPrice" />
                        <span class="input-group-text"><i class="fa fa-dollar"></i></span>
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div>
                    <label>Maximum Price</label>
                    <div class="input-group">
                        <input name="MinPrice" type="number" class="form-control" id="maxPrice" />
                        <span class="input-group-text"><i class="fa fa-dollar"></i></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="form-group">
        <label>Other details</label>
        <textarea name="Details" id="detail" class="form-control" placeholder="Details..."></textarea>
    </div>
    <div class="form-group d-flex">
        <input type="submit" id="addRequest" class="form-control btn w-25" style="background-color:#4cb9e7;color:#ffffff;" value="Save request" />
        <div id="loadingDiv" style="margin-left: 10px;">
        </div>
    </div>

</form>

<script>
    $("#navRequest").addClass("active");

    var turkiye = {};

    $(document).ready(function () {
        fetch("../js/countries.json")
        .then(res => res.json())
        .then(datas => {
            turkiye = datas;
            let cities = turkiye.map(data => data.name);
            let options = "<option value='0' checked>Select city</option>";
            cities.forEach(city => options += `<option value='${city}'>${city}</option>`)
            $("#selectCity").html(options);
        })

        $("#selectCity").change(() => {
            $("#select-district").css("display", "block");
            let cityname = $("#selectCity").val();
            let cityObject = turkiye.filter(city => city.name == cityname)[0];
            let towns = cityObject.towns;
            let townNames = towns.map(town => town.name);
            let options = "";
            townNames.forEach(townName => options += `<option value="${townName}">${townName}</option>`);
            $("#selectTown").html(options);
            $('.selectpicker').selectpicker('refresh');
        });

        $("#addRequest").on("click",(e)=>{
            e.preventDefault();

            $.post("/propertyrequest/addrequest", {
                requestTitle: $("input[name='RequestTitle']").val(),
                radioForClient: $("input[name='radioForClient']:checked").val(),
                clientId: $("#select-client").val(),
                clientNameSurname: $("input[name='ClientNameSurname']").val(),
                clientPhoneNumber: $("input[name='ClientPhoneNumber']").val(),
                clientEmail: $("input[name='ClientEmail']").val(),
                propertyTypeId: $("#propertyTypeInput").val(),
                PropertyStatusId: $("input[name='PropertyStatusId']:checked").val(),
                city: $("#selectCity").val(),
                district: $("#selectTown").val(),
                numberOfRooms: $("#selectNumberOfRooms").val(),
                minPrice: $("#minPrice").val(),
                maxPrice: $("#maxPrice").val(),
                details: $("textarea#detail").val()
            })
            .done((data, status) => {
                if (data.success) {
                    window.location.href = "/propertyrequest";
                }
                else {
                    sendNotification("error", data.message);
                }
            }).fail((xhr, status, error)=>{
                sendNotification("error", `An error occured ${status} - ${error}`);
            })

        });

        setDisplayOfRoomInput();
        checkRadioForClient();

        $("input[name='radioForClient']").change(() => {
            checkRadioForClient()
        });

        $('#select-client').selectize({
            sortField: 'text'
        });

        $("#propertyTypeInput").change(() => {
            setDisplayOfRoomInput();
        });

        $("form").on("submit", ()=>{
            $("#loadingDiv").html('<div class="show d-flex align-items-center justify-content-center w-100"><div class="spinner-border text-primary text-center" role = "status"><span class="sr-only" > Loading...</span></div></div>');
        });

    });

    function setDisplayOfRoomInput() {
        let val = $("#propertyTypeInput").val();
        let rooms = $("#numberOfRooms");
        
        if (val == "1" || val == "4") {
            rooms.css("display", "block");
        }
        else {
            rooms.css("display", "none");
        }
    }

    function checkRadioForClient() {
        if ($('#newClient').is(':checked')) {
            $("#newClientDiv").fadeIn();
            $("#savedClientDiv").fadeOut();
        }
        else {
            $("#newClientDiv").fadeOut();
            $("#savedClientDiv").fadeIn();
        }
    }
</script>
<script src="~/lib/selectize/js/selectize.min.js"></script>
<script src="~/lib/bootstrap-select/js/bootstrap-select.min.js"></script>