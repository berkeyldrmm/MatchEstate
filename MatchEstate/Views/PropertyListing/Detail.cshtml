﻿@using Shared.Dtos.Abstractions
@model IPropertyListingDetailDto

<style>
    h4{
        margin-right:25px;
    }

    ul.d-grid{
        font-size:14px;
    }

    li{
        padding:5px;
    }
</style>

<div class="single-property section" style="margin-top:50px;margin-left:50px">
    <div class="container">
        <h3 class="mb-3">@Model.Title</h3>
        <div class="row">
            <div class="col-lg-7">
                <div class="main-image text-center">
                    <img src="@(Model.ImageBase64 ?? "/img/no-image2.png")" alt="Property Listing Image" width="700" />
                </div>
                <div class="main-content mt-3">
                    <h4>Details</h4>
                    <p class="card-text">@(Model.Details != null && Model.Details != "" ? Model.Details : Html.Raw("<p class='text-warning'>No details</p>"))</p>
                </div>
                <hr style="margin-top:50px;" />
                <h3 class="card-title" style="margin-top:50px;">Suitable Requests</h3>
                <div>
                    @await Component.InvokeAsync("GetRequestsOfListingComponent", new { listingId = Model.Id })
                </div>
            </div>
            <div class="col-lg-5">
                <div class="info-table">
                    <ul class="d-grid">
                        <li class="row">
                            <strong class="col-5">Client Name Surname</strong>|
                            <span class="col-6">@Model.ClientNameSurname</span>
                        </li>
                        <li class="row">
                            <strong class="col-5">Client Phone Number</strong>|
                            <span class="col-6">@Model.ClientPhoneNumber</span>
                        </li>
                        <li class="row">
                            <strong class="col-5">Client Email Address</strong>|
                            <span class="col-6">@Model.ClientEmailAddress</span>
                        </li>
                        <li class="row">
                            <strong class="col-5">Property Type</strong>|
                            <span class="col-6">@Model.PropertyType</span>
                        </li>
                        <li class="row">
                            <strong class="col-5">Property Status</strong>|
                            <span class="col-6">@Model.PropertyStatus</span>
                        </li>
                        <li class="row">
                            <strong class="col-5">Address</strong>|
                            <span class="col-6">@Model.Address</span>
                        </li>
                        <li class="row">
                            <strong class="col-5">Price</strong>|
                            <span class="col-6">@Model.Price</span>
                        </li>
                        <li class="row">
                            <strong class="col-5">Commission</strong>|
                            <span class="col-6">@Model.Commission</span>
                        </li>
                        <li class="row">
                            <strong class="col-5">Status</strong>|
                            <span class="col-6">@(Model.DealStatus ? "Finalized" : "Waiting for client")</span>
                        </li>
                        @if (Model.DealStatus)
                        {
                            <li class="row">
                                <strong class="col-5">Earning</strong>|
                                <span class="col-6">@Model.Earning</span>
                            </li>
                        }
                        <li class="row">
                            <strong class="col-5">Added Date</strong>|
                            <span class="col-6">@Model.AddedDate</span>
                        </li>
                        @await Component.InvokeAsync("ListingDetailComponent", new { dto = Model })

                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $("#navListing").addClass("active");
</script> 